name: Docker Build Test

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: 构建 ARM 和 AMD 的 Docker 镜像
      - name: Build Multi-Platform Images
        id: build_images
        run: |
          # 确保工作目录指向主目录
          ls -la
          mkdir -p output
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file ./Dockerfile \  # 指定主目录下的 Dockerfile
            --output type=docker,dest=output/my-image.tar \
            -t cloud-clipboard:latest .

      # Step 4: 压缩导出的镜像
      - name: Compress Docker Image
        run: |
          gzip -c output/my-image.tar > output/my-image.tar.gz
          echo "TAR_PATH=$PWD/output/my-image.tar.gz" >> $GITHUB_ENV

      # Step 5: 将导出的镜像上传为 Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: ${{ env.TAR_PATH }}